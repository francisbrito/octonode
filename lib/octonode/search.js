// Generated by CoffeeScript 1.6.3
(function() {
  var Search, _searchQueryGenerator;

  _searchQueryGenerator = function(endpoint) {
    return function(q, sort, order, qualifiers, cb) {
      var params, qArgs, qaKey, qaValue;
      qArgs = [];
      qArgs.push(q);
      for (qaKey in qualifiers) {
        qaValue = qualifiers[qaKey];
        qArgs.push("" + qaKey + ":" + qaValue);
      }
      qArgs = qArgs.join('+');
      params = "";
      params += "q=" + qArgs;
      if (sort) {
        params += "&sort=" + sort + "&";
      }
      if (order) {
        params += "order=" + order;
      }
      return this.client.get("/search/" + endpoint + "?" + params, function(err, s, b) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error("Search " + endpoint + " error"));
        } else {
          return cb(null, b);
        }
      });
    };
  };

  Search = (function() {
    function Search(client) {
      this.client = client;
    }

    Search.prototype.repos = _searchQueryGenerator('repositories');

    Search.prototype.code = _searchQueryGenerator('code');

    Search.prototype.users = _searchQueryGenerator('users');

    Search.prototype.issues = _searchQueryGenerator('issues');

    return Search;

  })();

  module.exports = Search;

}).call(this);
